# Generated by Django 5.2.2 on 2025-08-04 07:24

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('calibration', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddingCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_height_cm', models.FloatField(help_text='Текущий уровень жидкости в сантиметрах', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Текущая высота (см)')),
                ('density_kg_per_liter', models.FloatField(default=1.0, help_text='Плотность продукта в килограммах на литр', validators=[django.core.validators.MinValueValidator(0.0001)], verbose_name='Плотность (кг/л)')),
                ('amount_type', models.CharField(choices=[('weight', 'Вес (кг)'), ('volume', 'Объем (л)')], help_text='Тип добавляемого количества', max_length=10, verbose_name='Тип количества')),
                ('amount_value', models.FloatField(help_text='Количество жидкости для добавления', validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Количество для добавления')),
                ('current_volume_liters', models.FloatField(default=0.0, help_text='Рассчитанный текущий объем', verbose_name='Текущий объем (л)')),
                ('current_weight_kg', models.FloatField(default=0.0, help_text='Рассчитанный текущий вес', verbose_name='Текущий вес (кг)')),
                ('added_volume_liters', models.FloatField(default=0.0, help_text='Объем жидкости, который будет добавлен', verbose_name='Добавленный объем (л)')),
                ('added_weight_kg', models.FloatField(default=0.0, help_text='Вес жидкости, который будет добавлен', verbose_name='Добавленный вес (кг)')),
                ('final_volume_liters', models.FloatField(default=0.0, help_text='Объем после добавления', verbose_name='Конечный объем (л)')),
                ('final_weight_kg', models.FloatField(default=0.0, help_text='Вес после добавления', verbose_name='Конечный вес (кг)')),
                ('final_height_cm', models.FloatField(default=0.0, help_text='Высота после добавления', verbose_name='Конечная высота (см)')),
                ('fill_percentage', models.FloatField(default=0.0, help_text='Процент заполнения резервуара после добавления', verbose_name='Процент заполнения')),
                ('interpolation_method', models.CharField(default='spline', help_text='Метод, используемый для интерполяции', max_length=20, verbose_name='Метод интерполяции')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время расчета')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.product', verbose_name='Продукт')),
                ('tank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.tank', verbose_name='Резервуар')),
            ],
            options={
                'verbose_name': 'Расчет добавления',
                'verbose_name_plural': 'Расчеты добавления',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='VolumeWeightCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height_cm', models.FloatField(help_text='Уровень жидкости в сантиметрах', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Высота жидкости (см)')),
                ('density_kg_per_liter', models.FloatField(default=1.0, help_text='Плотность продукта в килограммах на литр', validators=[django.core.validators.MinValueValidator(0.0001)], verbose_name='Плотность (кг/л)')),
                ('volume_liters', models.FloatField(default=0.0, help_text='Рассчитанный объем на основе калибровки', verbose_name='Объем (л)')),
                ('weight_kg', models.FloatField(default=0.0, help_text='Рассчитанный вес (объем × плотность)', verbose_name='Вес (кг)')),
                ('fill_percentage', models.FloatField(default=0.0, help_text='Процент заполнения резервуара', verbose_name='Процент заполнения')),
                ('interpolation_method', models.CharField(default='spline', help_text='Метод, используемый для интерполяции', max_length=20, verbose_name='Метод интерполяции')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время расчета')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.product', verbose_name='Продукт')),
                ('tank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.tank', verbose_name='Резервуар')),
            ],
            options={
                'verbose_name': 'Расчет объема и веса',
                'verbose_name_plural': 'Расчеты объема и веса',
                'ordering': ['-timestamp'],
            },
        ),
    ]
