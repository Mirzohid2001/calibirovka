# Generated by Django 5.2.2 on 2025-06-12 17:55

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название продукта', max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, help_text='Описание продукта, включая информацию о плотности', null=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Уникальное название резервуара', max_length=200, unique=True, verbose_name='Название')),
                ('capacity_liters', models.FloatField(help_text='Максимальная емкость резервуара в литрах', validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Емкость (л)')),
                ('height_cm', models.FloatField(help_text='Общая высота резервуара в сантиметрах', validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Высота (см)')),
                ('description', models.TextField(blank=True, help_text='Дополнительная информация о резервуаре', null=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Резервуар',
                'verbose_name_plural': 'Резервуары',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TransferCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('density_kg_per_liter', models.FloatField(default=1.0, help_text='Плотность продукта в килограммах на литр', validators=[django.core.validators.MinValueValidator(0.0001)], verbose_name='Плотность (кг/л)')),
                ('initial_height_cm', models.FloatField(help_text='Уровень жидкости до откачки в сантиметрах', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Начальная высота (см)')),
                ('transfer_weight_kg', models.FloatField(help_text='Вес жидкости для откачки в килограммах', validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Вес откачки (кг)')),
                ('initial_volume_liters', models.FloatField(default=0.0, help_text='Рассчитанный начальный объем', verbose_name='Начальный объем (л)')),
                ('final_volume_liters', models.FloatField(default=0.0, help_text='Рассчитанный объем после откачки', verbose_name='Объем после откачки (л)')),
                ('volume_added_liters', models.FloatField(default=0.0, help_text='Объем жидкости, откачанной из резервуара', verbose_name='Откачанный объем (л)')),
                ('final_height_cm', models.FloatField(default=0.0, help_text='Рассчитанная высота после откачки', verbose_name='Высота после откачки (см)')),
                ('fill_percentage', models.FloatField(default=0.0, help_text='Процент заполнения резервуара после откачки', verbose_name='Процент заполнения')),
                ('interpolation_method', models.CharField(default='spline', help_text='Метод, используемый для интерполяции', max_length=20, verbose_name='Метод интерполяции')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время расчета')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.product', verbose_name='Продукт')),
                ('tank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calibration.tank', verbose_name='Резервуар')),
            ],
            options={
                'verbose_name': 'Расчет откачки',
                'verbose_name_plural': 'Расчеты откачки',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CalibrationPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height_cm', models.FloatField(help_text='Высота жидкости в сантиметрах', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Высота (см)')),
                ('volume_liters', models.FloatField(help_text='Соответствующий объем в литрах', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Объем (л)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('tank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calibrations', to='calibration.tank', verbose_name='Резервуар')),
            ],
            options={
                'verbose_name': 'Точка калибровки',
                'verbose_name_plural': 'Точки калибровки',
                'ordering': ['tank', 'height_cm'],
                'unique_together': {('tank', 'height_cm')},
            },
        ),
    ]
